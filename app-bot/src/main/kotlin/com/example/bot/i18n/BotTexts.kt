package com.example.bot.i18n

/**
 * Localized bot texts used across guest flow.
 */
class BotTexts {
    /**
     * Returns greeting text based on [lang]. Defaults to Russian.
     */
    fun greeting(lang: String?): String = if (lang.isEnglish()) "Welcome!" else "–ü—Ä–∏–≤–µ—Ç!"

    /**
     * Returns menu button labels in selected language.
     */
    fun menu(lang: String?): Menu {
        return if (lang.isEnglish()) {
            Menu("Choose club", "My bookings", "Ask question", "Music")
        } else {
            Menu("–í—ã–±—Ä–∞—Ç—å –∫–ª—É–±", "–ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è", "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", "–ú—É–∑—ã–∫–∞")
        }
    }

    /**
     * Legend for hall renderer.
     */
    fun legend(lang: String?): String =
        if (lang.isEnglish()) "üü¢ free / üü° hold / üî¥ booked" else "üü¢ —Å–≤–æ–±–æ–¥–Ω–æ / üü° hold / üî¥ –∑–∞–Ω—è—Ç–æ"

    /**
     * Prompt shown before table selection.
     */
    fun chooseTable(lang: String?): String = if (lang.isEnglish()) "Choose a table:" else "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–ª:"

    fun sessionExpired(lang: String?) =
        if (lang.isEnglish()) {
            "The session has expired, please start over."
        } else {
            "–°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞, –Ω–∞—á–Ω–∏—Ç–µ –≤—ã–±–æ—Ä –∑–∞–Ω–æ–≤–æ."
        }

    fun noTables(lang: String?) =
        if (lang.isEnglish()) {
            "No free tables for this night."
        } else {
            "–°–≤–æ–±–æ–¥–Ω—ã—Ö —Å—Ç–æ–ª–æ–≤ –Ω–∞ —ç—Ç—É –Ω–æ—á—å –Ω–µ—Ç."
        }

    data class Menu(val chooseClub: String, val myBookings: String, val ask: String, val music: String)

    private fun String?.isEnglish(): Boolean = this?.startsWith("en", ignoreCase = true) == true
}
