<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>ComplexCondition:NotifySender.kt$NotifySender$result is Result.Failed &amp;&amp; result.code == 400 &amp;&amp; threadId != null &amp;&amp; (result.description?.contains("thread", true) == true)</ID>
    <ID>DestructuringDeclarationWithTooManyEntries:CampaignScheduler.kt$CampaignScheduler$val (min, hour, dom, month, dow) = parts</ID>
    <ID>ImplicitDefaultLocale:GuestFlowRoutes.kt$String.format("%02x", it)</ID>
    <ID>ImplicitDefaultLocale:MusicRoutes.kt$String.format("%02x", it)</ID>
    <ID>LongMethod:NotifyRoutes.kt$fun Application.notifyRoutes(tx: TxNotifyService, campaigns: CampaignService)</ID>
    <ID>LongMethod:OutboxWorker.kt$OutboxWorker$private suspend fun process(rec: OutboxRepository.Record)</ID>
    <ID>LongParameterList:OutboxWorker.kt$OutboxWorker$( private val scope: CoroutineScope, private val repo: OutboxRepository, private val sender: NotifySender, private val ratePolicy: RatePolicy, private val config: NotifyConfig, private val registry: MeterRegistry = Telemetry.registry, private val batchSize: Int = 10, )</ID>
    <ID>LoopWithTooManyJumpStatements:CampaignScheduler.kt$CampaignScheduler$for</ID>
    <ID>MagicNumber:Application.kt$40</ID>
    <ID>MagicNumber:AvailabilityRoutes.kt$8</ID>
    <ID>MagicNumber:CampaignScheduler.kt$CampaignScheduler$5</ID>
    <ID>MagicNumber:CampaignScheduler.kt$CampaignScheduler$59</ID>
    <ID>MagicNumber:CampaignScheduler.kt$CampaignScheduler$7</ID>
    <ID>MagicNumber:GuestFlowRoutes.kt$8</ID>
    <ID>MagicNumber:HallRenderer.kt$HallRenderer$0x22</ID>
    <ID>MagicNumber:HallRenderer.kt$HallRenderer$0x80</ID>
    <ID>MagicNumber:HallRenderer.kt$HallRenderer$0xB2</ID>
    <ID>MagicNumber:HallRenderer.kt$HallRenderer$0xD7</ID>
    <ID>MagicNumber:HallRenderer.kt$HallRenderer$0xFF</ID>
    <ID>MagicNumber:HallRenderer.kt$HallRenderer$12</ID>
    <ID>MagicNumber:HallRenderer.kt$HallRenderer$14</ID>
    <ID>MagicNumber:HallRenderer.kt$HallRenderer$4</ID>
    <ID>MagicNumber:HallRenderer.kt$HallRenderer$80</ID>
    <ID>MagicNumber:Keyboards.kt$Keyboards$4</ID>
    <ID>MagicNumber:LoggingPlugin.kt$16</ID>
    <ID>MagicNumber:LoggingPlugin.kt$64</ID>
    <ID>MagicNumber:MusicRoutes.kt$20</ID>
    <ID>MagicNumber:NotifySender.kt$NotifySender$3</ID>
    <ID>MagicNumber:NotifySender.kt$NotifySender$400</ID>
    <ID>MagicNumber:NotifySender.kt$NotifySender$429</ID>
    <ID>MagicNumber:OutboxWorker.kt$OutboxWorker$1_000_000</ID>
    <ID>MagicNumber:OutboxWorker.kt$OutboxWorker$400</ID>
    <ID>MagicNumber:OutboxWorker.kt$OutboxWorker$403</ID>
    <ID>MaxLineLength:MiniAppModule.kt$"default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src *"</ID>
    <ID>NestedBlockDepth:CampaignScheduler.kt$CampaignScheduler$private suspend fun loop()</ID>
    <ID>ReturnCount:Application.kt$private suspend fun handleUpdate(update: com.example.bot.webhook.UpdateDto): WebhookReply?</ID>
    <ID>ReturnCount:CampaignScheduler.kt$CampaignScheduler$private fun isDue(c: SchedulerApi.Campaign, now: OffsetDateTime): Boolean</ID>
    <ID>ReturnCount:CampaignScheduler.kt$CampaignScheduler$private fun match(field: String, value: Int): Boolean</ID>
    <ID>ReturnCount:NotifySender.kt$NotifySender$suspend fun sendMediaGroup( chatId: Long, media: List&lt;Media&gt;, threadId: Int? = null, ): Result</ID>
    <ID>ReturnCount:OutboxWorker.kt$OutboxWorker$private suspend fun process(rec: OutboxRepository.Record)</ID>
    <ID>SpreadOperator:Keyboards.kt$Keyboards$(*rows.toTypedArray())</ID>
    <ID>SpreadOperator:NotifySender.kt$NotifySender$(chatId, *inputMedia.toTypedArray())</ID>
    <ID>SpreadOperator:OutboxWorker.kt$OutboxWorker$(*rows)</ID>
    <ID>SpreadOperator:TelegramClient.kt$TelegramClient$(*allowedUpdates.toTypedArray())</ID>
    <ID>ThrowsCount:NotifyRoutes.kt$fun Application.notifyRoutes(tx: TxNotifyService, campaigns: CampaignService)</ID>
    <ID>TooGenericExceptionCaught:NotifySender.kt$NotifySender$t: Exception</ID>
  </CurrentIssues>
</SmellBaseline>
