services:
  postgres:
    image: public.ecr.aws/docker/library/postgres:16-alpine
    container_name: bot_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: botdb
      POSTGRES_USER: botuser
      POSTGRES_PASSWORD: botpass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U botuser -d botdb || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - bot_net

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bot_app
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: jdbc:postgresql://postgres:5432/botdb
      DATABASE_USER: botuser
      DATABASE_PASSWORD: botpass
      PORT: "8080"
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/ready || exit 1"]
      interval: 20s
      timeout: 3s
      retries: 6
    networks:
      - bot_net

networks:
  bot_net:
    driver: bridge

volumes:
  pg_data: